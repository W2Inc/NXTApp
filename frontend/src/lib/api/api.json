{
  "openapi": "3.0.1",
  "info": {
    "title": "NXT API",
    "description": "The NXT API provides access to NXT's data. THis way you can programmatically subscribe a project and more!",
    "contact": {
      "name": "W2Wizard",
      "email": "info@nextdemy.com"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:3000"
    }
  ],
  "paths": {
    "/cursus": {
      "get": {
        "tags": [
          "Cursus"
        ],
        "summary": "Get all exisiting cursi",
        "description": "",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          },
          {
            "name": "filter[slug]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[id]",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CursusDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CursusDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CursusDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Cursus"
        ],
        "summary": "Create a cursus",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CursusPostRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CursusPostRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CursusPostRequestDTO"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/CursusPostRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cursus/{id}": {
      "get": {
        "tags": [
          "Cursus"
        ],
        "summary": "Get a cursus",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Cursus"
        ],
        "summary": "Update a cursus",
        "description": "Updates a cursus partially based on the provided fields.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CursusPatchRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CursusPatchRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CursusPatchRequestDTO"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/CursusPatchRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Cursus"
        ],
        "summary": "Delete a cursus",
        "description": "Cursus deletion is rarely done, and only result in deprecations if they have dependencies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CursusDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/cursus/{id}/path": {
      "put": {
        "tags": [
          "Cursus"
        ],
        "summary": "Define the track / path of a cursus",
        "description": "Cursi can have a set track of goals ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Cursus"
        ],
        "summary": "Get the track / path of a cursus",
        "description": "Lets you retrieve the binary data of the track ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": { }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/goals": {
      "get": {
        "tags": [
          "Goal"
        ],
        "summary": "Get all exisiting goals",
        "description": "",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          },
          {
            "name": "filter[id]",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter[slug]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[name]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Goal"
        ],
        "summary": "Create a goal",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoalPostRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GoalPostRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GoalPostRequestDto"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/GoalPostRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LearningGoalDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningGoalDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningGoalDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/goals/{id}": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Get a goal",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Review"
        ],
        "summary": "Update a goal",
        "description": "Updates a goal partially based on the provided fields.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPatchRequestDto"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPatchRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Review"
        ],
        "summary": "Delete a goal",
        "description": "Goal deletion is rarely done, and only result in deprecations if they have dependencies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LearningGoalDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningGoalDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LearningGoalDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/goals/{id}/projects": {
      "get": {
        "tags": [
          "Goal"
        ],
        "summary": "Get the projects that are part of this goal",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/goals/{id}/users": {
      "get": {
        "tags": [
          "Goal"
        ],
        "summary": "Get the projects that are part of this goal",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get all exisiting projects",
        "description": "",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          },
          {
            "name": "filter[name]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[slug]",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filter[id]",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create a project",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPostRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPostRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPostRequestDto"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPostRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/projects/{id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get a project",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Project"
        ],
        "summary": "Update a project",
        "description": "Updates a goal partially based on the provided fields.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPatchRequestDto"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/ProjectPatchRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete a project",
        "description": "Goal deletion is rarely done, and only result in deprecations if they have dependencies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/projects/{id}/users": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Get the projects that are part of this goal",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LearningGoalDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Get all exisiting goals",
        "description": "",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReviewDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Review"
        ],
        "summary": "Create a review",
        "description": "\nIf the kind of review and reviewerId are null. It will signal that the project instance is *requesting* a review",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPostRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewPostRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/search/{category}": {
      "get": {
        "tags": [
          "Search"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "User",
                "Project",
                "Cursus",
                "LearningGoal"
              ]
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array"
                }
              },
              "application/json": {
                "schema": {
                  "type": "array"
                }
              },
              "text/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the currently authenticated user.",
        "description": "When authenticated it's useful to know who you currently are logged in as.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/current/spotlights": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get the currently authenticated user's spotlights.",
        "description": "If they were dismissed they will get filtered out.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpotlightEvent"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpotlightEvent"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SpotlightEvent"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/current/spotlights/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "As the current user, dismiss a specific spotlight.",
        "description": "If users dismiss a spotlight event, they won't getit shown in the future.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SpotlightEventActionDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpotlightEventActionDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpotlightEventActionDO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/current/notifications": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get your notifications",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/current/notifications/read": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Mark all your notifications as read",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/current/notifications/{id}/read": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Mark a given notifications as read",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/current/events": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "",
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users.",
        "description": "All users that exists in the database.",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPatchRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPatchRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserPatchRequestDTO"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/UserPatchRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{id}/details": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetailsPutRequestDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetailsPutRequestDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserDetailsPutRequestDTO"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/UserDetailsPutRequestDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{id}/bio": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Gets the user defined biography",
        "description": "A user can have a markdown biography to present themselves to others.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Sets the user defined biography",
        "description": "A user can have a markdown biography to present themselves to others.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{id}/cursus": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCursusDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCursusDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCursusDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{id}/goals": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGoalDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGoalDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGoalDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{id}/projects": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/{id}/projects/{projectId}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Subscribe a user to a project",
        "description": "Subscribe a user to a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjectDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjectDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjectDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Unsubscribe a user from a project",
        "description": "Unsubscribe a user from a project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjectDO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjectDO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProjectDO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/projects": {
      "get": {
        "tags": [
          "Project Instances"
        ],
        "summary": "Get all project instances",
        "description": "Get all project instances",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/projects/{id}": {
      "get": {
        "tags": [
          "Project Instances"
        ],
        "summary": "",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Size",
            "in": "query",
            "schema": {
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/projects/{id}/git": {
      "put": {
        "tags": [
          "Project Instances"
        ],
        "summary": "Set the Git info",
        "description": "Set the git info",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users/projects/{id}/invitation": {
      "post": {
        "tags": [
          "Project Instances"
        ],
        "summary": "Send a invitation to a user project",
        "description": "Send a invitation to a user project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Project Instances"
        ],
        "summary": "Decline a invitation to a user project",
        "description": "Decline a invitation to a user project",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserProjectDO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CursusDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "description",
          "markdown",
          "slug",
          "public",
          "enabled",
          "kind",
          "creator"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "markdown": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "public": {
            "type": "boolean",
            "description": "Whether the cursus is public"
          },
          "enabled": {
            "type": "boolean",
            "description": "If true, the cursus is subscribable"
          },
          "kind": {
            "$ref": "#/components/schemas/CursusKind"
          },
          "creator": {
            "$ref": "#/components/schemas/MinimalUserDTO"
          }
        }
      },
      "CursusDO2": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "description",
          "markdown",
          "slug",
          "public",
          "enabled",
          "kind",
          "creator"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "markdown": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "public": {
            "type": "boolean",
            "description": "Whether the cursus is public"
          },
          "enabled": {
            "type": "boolean",
            "description": "If true, the cursus is subscribable"
          },
          "kind": {
            "$ref": "#/components/schemas/CursusKind"
          },
          "creator": {
            "$ref": "#/components/schemas/MinimalUserDTO"
          }
        },
        "nullable": true
      },
      "CursusKind": {
        "enum": [
          "Dynamic",
          "Fixed"
        ]
      },
      "CursusPatchRequestDTO": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 4,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 128,
            "minLength": 4,
            "type": "string",
            "nullable": true
          },
          "markdown": {
            "maxLength": 2048,
            "minLength": 128,
            "type": "string",
            "nullable": true
          },
          "public": {
            "type": "boolean",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "CursusPostRequestDTO": {
        "required": [
          "name",
          "description",
          "markdown",
          "public",
          "enabled",
          "kind"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 4,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 128,
            "minLength": 4,
            "type": "string",
            "nullable": true
          },
          "markdown": {
            "maxLength": 2048,
            "minLength": 128,
            "type": "string",
            "nullable": true
          },
          "public": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "kind": {
            "$ref": "#/components/schemas/CursusKind"
          }
        }
      },
      "GitDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "gitUrl": {
            "type": "string"
          },
          "gitBranch": {
            "type": "string"
          },
          "gitCommit": {
            "type": "string",
            "nullable": true
          }
        },
        "nullable": true
      },
      "GitInfoRequestDto": {
        "required": [
          "gitUrl"
        ],
        "type": "object",
        "properties": {
          "gitUrl": {
            "type": "string",
            "format": "uri"
          },
          "gitBranch": {
            "type": "string",
            "nullable": true
          },
          "gitCommit": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GitInfoRequestDto2": {
        "required": [
          "gitUrl"
        ],
        "type": "object",
        "properties": {
          "gitUrl": {
            "type": "string",
            "format": "uri"
          },
          "gitBranch": {
            "type": "string",
            "nullable": true
          },
          "gitCommit": {
            "type": "string",
            "nullable": true
          }
        },
        "nullable": true
      },
      "GoalPatchRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 4,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 128,
            "minLength": 4,
            "type": "string",
            "nullable": true
          },
          "markdown": {
            "maxLength": 2048,
            "minLength": 128,
            "type": "string",
            "nullable": true
          },
          "public": {
            "type": "boolean",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "GoalPostRequestDto": {
        "required": [
          "name",
          "description",
          "markdown",
          "public",
          "enabled"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 4,
            "type": "string"
          },
          "description": {
            "maxLength": 128,
            "minLength": 4,
            "type": "string"
          },
          "markdown": {
            "maxLength": 2048,
            "minLength": 128,
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "LearningGoalDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "slug",
          "markdown",
          "description",
          "creator"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "markdown": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/MinimalUserDTO"
          }
        }
      },
      "MinimalUserDTO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "login",
          "displayName",
          "avatarUrl",
          "detailsId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "login": {
            "type": "string"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true
          },
          "detailsId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "nullable": true
      },
      "NullableOfReviewState": {
        "enum": [
          "Pending",
          "InProgress",
          "Finished",
          null
        ],
        "nullable": true
      },
      "Order": {
        "enum": [
          "Ascending",
          "Descending"
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ProjectDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "markdown",
          "description",
          "slug",
          "thumbnailUrl",
          "public",
          "enabled",
          "maxMembers",
          "gitInfo",
          "creator",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "markdown": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "public": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "maxMembers": {
            "type": "integer",
            "format": "int32"
          },
          "gitInfo": {
            "$ref": "#/components/schemas/GitDO"
          },
          "creator": {
            "$ref": "#/components/schemas/MinimalUserDTO"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProjectDO2": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "markdown",
          "description",
          "slug",
          "thumbnailUrl",
          "public",
          "enabled",
          "maxMembers",
          "gitInfo",
          "creator",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "markdown": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string"
          },
          "thumbnailUrl": {
            "type": "string",
            "nullable": true
          },
          "public": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "maxMembers": {
            "type": "integer",
            "format": "int32"
          },
          "gitInfo": {
            "$ref": "#/components/schemas/GitDO"
          },
          "creator": {
            "$ref": "#/components/schemas/MinimalUserDTO"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "nullable": true
      },
      "ProjectPatchRequestDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 4,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 256,
            "minLength": 4,
            "type": "string",
            "nullable": true
          },
          "markdown": {
            "maxLength": 2048,
            "minLength": 128,
            "type": "string",
            "nullable": true
          },
          "maxMembers": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "thumbnailUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "public": {
            "type": "boolean",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "nullable": true
          },
          "gitInfo": {
            "$ref": "#/components/schemas/GitInfoRequestDto2"
          }
        }
      },
      "ProjectPostRequestDto": {
        "required": [
          "name",
          "description",
          "markdown",
          "maxMembers",
          "thumbnailUrl",
          "public",
          "enabled",
          "gitInfo"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 4,
            "type": "string"
          },
          "description": {
            "maxLength": 256,
            "minLength": 4,
            "type": "string"
          },
          "markdown": {
            "maxLength": 2048,
            "minLength": 128,
            "type": "string"
          },
          "maxMembers": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "thumbnailUrl": {
            "type": "string",
            "format": "uri"
          },
          "public": {
            "type": "boolean"
          },
          "enabled": {
            "type": "boolean"
          },
          "gitInfo": {
            "$ref": "#/components/schemas/GitInfoRequestDto"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReviewDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "kind",
          "state",
          "validated",
          "reviewer",
          "userProjectId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "kind": {
            "$ref": "#/components/schemas/ReviewKind"
          },
          "state": {
            "$ref": "#/components/schemas/ReviewState"
          },
          "validated": {
            "type": "boolean"
          },
          "reviewer": {
            "$ref": "#/components/schemas/MinimalUserDTO"
          },
          "userProjectId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ReviewKind": {
        "enum": [
          "Self",
          "Peer",
          "Async",
          "Auto"
        ]
      },
      "ReviewPatchRequestDto": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/NullableOfReviewState"
          },
          "feedbackId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "reviewerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "validated": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ReviewPostRequestDTO": {
        "required": [
          "kind",
          "rubricId",
          "userProjectId",
          "reviewerId"
        ],
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/ReviewKind"
          },
          "rubricId": {
            "type": "string",
            "format": "uuid"
          },
          "userProjectId": {
            "type": "string",
            "format": "uuid"
          },
          "reviewerId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "ReviewState": {
        "enum": [
          "Pending",
          "InProgress",
          "Finished"
        ]
      },
      "SpotlightEvent": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "actionText": {
            "type": "string"
          },
          "href": {
            "type": "string",
            "format": "uri"
          },
          "backgroundUrl": {
            "type": "string",
            "format": "uri"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SpotlightEventActionDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "userId",
          "notificationId",
          "isDismissed"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "notificationId": {
            "type": "string",
            "format": "uuid"
          },
          "isDismissed": {
            "type": "boolean"
          }
        }
      },
      "TaskState": {
        "enum": [
          "Inactive",
          "Active",
          "Awaiting",
          "Completed"
        ]
      },
      "UserCursusDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "state",
          "userId",
          "cursus"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/TaskState"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "cursus": {
            "$ref": "#/components/schemas/CursusDO2"
          }
        }
      },
      "UserDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "login",
          "displayName",
          "avatarUrl",
          "details"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "login": {
            "type": "string"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "$ref": "#/components/schemas/UserDetailsDO"
          }
        }
      },
      "UserDetailsDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "email",
          "firstName",
          "lastName",
          "githubUrl",
          "linkedinUrl",
          "twitterUrl",
          "websiteUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "githubUrl": {
            "type": "string",
            "nullable": true
          },
          "linkedinUrl": {
            "type": "string",
            "nullable": true
          },
          "twitterUrl": {
            "type": "string",
            "nullable": true
          },
          "websiteUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "nullable": true
      },
      "UserDetailsPutRequestDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "bio": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "githubUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "linkedinUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "twitterUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "websiteUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "UserGoalDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "user",
          "goalId",
          "userCursusId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/MinimalUserDTO"
          },
          "goalId": {
            "type": "string",
            "format": "uuid"
          },
          "userCursusId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "UserPatchRequestDTO": {
        "type": "object",
        "properties": {
          "displayName": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "avatarUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "UserProjectDO": {
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "state",
          "project",
          "gitInfo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "state": {
            "$ref": "#/components/schemas/TaskState"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectDO2"
          },
          "gitInfo": {
            "$ref": "#/components/schemas/GitDO"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Json Web Token"
      },
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://localhost:8089/auth/realms/student/protocol/openid-connect/auth",
            "tokenUrl": "http://localhost:8089/auth/realms/student/protocol/openid-connect/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Cursus"
    },
    {
      "name": "Goal"
    },
    {
      "name": "Review"
    },
    {
      "name": "Project"
    },
    {
      "name": "Search"
    },
    {
      "name": "User"
    },
    {
      "name": "Project Instances"
    }
  ]
}